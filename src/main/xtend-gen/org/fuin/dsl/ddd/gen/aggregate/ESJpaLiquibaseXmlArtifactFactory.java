package org.fuin.dsl.ddd.gen.aggregate;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.fuin.dsl.ddd.domainDrivenDesignDsl.Aggregate;
import org.fuin.dsl.ddd.domainDrivenDesignDsl.Namespace;
import org.fuin.dsl.ddd.gen.base.AbstractSource;
import org.fuin.srcgen4j.commons.ArtifactFactory;
import org.fuin.srcgen4j.commons.GenerateException;
import org.fuin.srcgen4j.commons.GeneratedArtifact;

@SuppressWarnings("all")
public class ESJpaLiquibaseXmlArtifactFactory extends AbstractSource<Aggregate> implements ArtifactFactory<Aggregate> {
  public Class<? extends Aggregate> getModelType() {
    return Aggregate.class;
  }
  
  public GeneratedArtifact create(final Aggregate aggregate) throws GenerateException {
    try {
      EObject _eContainer = aggregate.eContainer();
      final Namespace ns = ((Namespace) _eContainer);
      String _name = aggregate.getName();
      String _sqlLower = this.toSqlLower(_name);
      String _plus = ("changelog-xxxxx-" + _sqlLower);
      final String filename = (_plus + "_events.xml");
      String _artifactName = this.getArtifactName();
      CharSequence _create = this.create(aggregate, ns);
      String _string = _create.toString();
      byte[] _bytes = _string.getBytes("UTF-8");
      return new GeneratedArtifact(_artifactName, filename, _bytes);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  public CharSequence create(final Aggregate aggregate, final Namespace ns) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    _builder.newLine();
    _builder.append("<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\"");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd ");
    _builder.newLine();
    _builder.append("\t                    ");
    _builder.append("http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd\">");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<changeSet id=\"x\" author=\"abc\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<comment>Create ");
    String _name = aggregate.getName();
    _builder.append(_name, "\t\t");
    _builder.append(" stream</comment>");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<createTable tableName=\"");
    String _name_1 = aggregate.getName();
    String _sqlLower = this.toSqlLower(_name_1);
    _builder.append(_sqlLower, "\t\t");
    _builder.append("_events\" remarks=\"Events of aggregate ");
    String _name_2 = aggregate.getName();
    _builder.append(_name_2, "\t\t");
    _builder.append("\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"");
    String _name_3 = aggregate.getName();
    String _sqlLower_1 = this.toSqlLower(_name_3);
    _builder.append(_sqlLower_1, "\t\t\t");
    _builder.append("_id\" type=\"java.sql.Types.VARCHAR(36)\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"event_number\" type=\"java.sql.Types.INTEGER(10)\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"events_id\" type=\"java.sql.Types.BIGINT\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" references=\"EVENTS\"");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("foreignKeyName=\"fk__");
    String _name_4 = aggregate.getName();
    String _sqlInitials = this.toSqlInitials(_name_4);
    _builder.append(_sqlInitials, "\t\t\t\t\t");
    _builder.append("__events_id\" />");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</createTable>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<addPrimaryKey tableName=\"");
    String _name_5 = aggregate.getName();
    String _sqlLower_2 = this.toSqlLower(_name_5);
    _builder.append(_sqlLower_2, "\t\t");
    _builder.append("_events\" columnNames=\"");
    String _name_6 = aggregate.getName();
    String _sqlLower_3 = this.toSqlLower(_name_6);
    _builder.append(_sqlLower_3, "\t\t");
    _builder.append("_id, event_number\"");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("constraintName=\"pk__");
    String _name_7 = aggregate.getName();
    String _sqlInitials_1 = this.toSqlInitials(_name_7);
    _builder.append(_sqlInitials_1, "\t\t\t");
    _builder.append("_events\" />");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<createTable tableName=\"");
    String _name_8 = aggregate.getName();
    String _sqlLower_4 = this.toSqlLower(_name_8);
    _builder.append(_sqlLower_4, "\t\t");
    _builder.append("_streams\" remarks=\"");
    String _name_9 = aggregate.getName();
    _builder.append(_name_9, "\t\t");
    _builder.append(" streams\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"");
    String _name_10 = aggregate.getName();
    String _sqlLower_5 = this.toSqlLower(_name_10);
    _builder.append(_sqlLower_5, "\t\t\t");
    _builder.append("_id\" type=\"java.sql.Types.VARCHAR(36)\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" primaryKey=\"true\"");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("primaryKeyName=\"pk__");
    String _name_11 = aggregate.getName();
    String _sqlInitials_2 = this.toSqlInitials(_name_11);
    _builder.append(_sqlInitials_2, "\t\t\t\t\t");
    _builder.append("_streams\" />");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"version\" type=\"java.sql.Types.INTEGER(10)\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<column name=\"deleted\" type=\"java.sql.Types.INTEGER(1)\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<constraints nullable=\"false\" />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</column>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</createTable>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</changeSet>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("</databaseChangeLog>");
    _builder.newLine();
    return _builder;
  }
}
