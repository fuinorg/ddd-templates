package org.fuin.dsl.ddd.gen.aggregate;

import java.util.Map;
import java.util.Set;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.fuin.dsl.ddd.domainDrivenDesignDsl.Aggregate;
import org.fuin.dsl.ddd.domainDrivenDesignDsl.AggregateId;
import org.fuin.dsl.ddd.domainDrivenDesignDsl.Namespace;
import org.fuin.dsl.ddd.gen.base.AbstractSource;
import org.fuin.dsl.ddd.gen.base.SrcAll;
import org.fuin.dsl.ddd.gen.base.Utils;
import org.fuin.dsl.ddd.gen.extensions.AbstractElementExtensions;
import org.fuin.dsl.ddd.gen.extensions.StringExtensions;
import org.fuin.srcgen4j.commons.ArtifactFactory;
import org.fuin.srcgen4j.commons.GenerateException;
import org.fuin.srcgen4j.commons.GeneratedArtifact;
import org.fuin.srcgen4j.core.emf.CodeReferenceRegistry;
import org.fuin.srcgen4j.core.emf.CodeSnippetContext;
import org.fuin.srcgen4j.core.emf.SimpleCodeSnippetContext;

@SuppressWarnings("all")
public class ESJpaEventArtifactFactory extends AbstractSource<Aggregate> implements ArtifactFactory<Aggregate> {
  public Class<? extends Aggregate> getModelType() {
    return Aggregate.class;
  }
  
  public GeneratedArtifact create(final Aggregate aggregate, final Map<String,Object> context, final boolean preparationRun) throws GenerateException {
    try {
      String _name = aggregate.getName();
      final String className = (_name + "Event");
      EObject _eContainer = aggregate.eContainer();
      final Namespace ns = ((Namespace) _eContainer);
      final String pkg = this.asPackage(ns);
      final String fqn = ((pkg + ".") + className);
      String _replace = fqn.replace(".", "/");
      final String filename = (_replace + ".java");
      final CodeReferenceRegistry refReg = Utils.getCodeReferenceRegistry(context);
      String _uniqueName = AbstractElementExtensions.uniqueName(aggregate);
      String _plus = (_uniqueName + "Event");
      refReg.putReference(_plus, fqn);
      if (preparationRun) {
        return null;
      }
      final SimpleCodeSnippetContext ctx = new SimpleCodeSnippetContext(refReg);
      this.addImports(ctx);
      this.addReferences(ctx, aggregate);
      String _artifactName = this.getArtifactName();
      String _create = this.create(ctx, aggregate, pkg, className);
      String _string = _create.toString();
      byte[] _bytes = _string.getBytes("UTF-8");
      return new GeneratedArtifact(_artifactName, filename, _bytes);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  public void addImports(final CodeSnippetContext ctx) {
    ctx.requiresImport("javax.persistence.Column");
    ctx.requiresImport("javax.persistence.Entity");
    ctx.requiresImport("javax.persistence.Id");
    ctx.requiresImport("javax.persistence.IdClass");
    ctx.requiresImport("javax.persistence.Table");
    ctx.requiresImport("javax.validation.constraints.NotNull");
    ctx.requiresImport("org.fuin.ddd4j.eventstore.jpa.EventEntry");
    ctx.requiresImport("org.fuin.ddd4j.eventstore.jpa.StreamEvent");
    ctx.requiresImport("org.fuin.objects4j.common.Contract");
  }
  
  public void addReferences(final CodeSnippetContext ctx, final Aggregate aggregate) {
    AggregateId _idType = aggregate.getIdType();
    String _uniqueName = AbstractElementExtensions.uniqueName(_idType);
    ctx.requiresReference(_uniqueName);
    String _uniqueName_1 = AbstractElementExtensions.uniqueName(aggregate);
    String _plus = (_uniqueName_1 + "Id");
    ctx.requiresReference(_plus);
  }
  
  public String create(final SimpleCodeSnippetContext ctx, final Aggregate aggregate, final String pkg, final String className) {
    String _xblockexpression = null;
    {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("/**");
      _builder.newLine();
      _builder.append(" ");
      _builder.append("* ");
      String _name = aggregate.getName();
      _builder.append(_name, " ");
      _builder.append(" event.");
      _builder.newLineIfNotEmpty();
      _builder.append(" ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("@Table(name = \"");
      String _name_1 = aggregate.getName();
      String _sqlUpper = StringExtensions.toSqlUpper(_name_1);
      _builder.append(_sqlUpper, "");
      _builder.append("_EVENTS\")");
      _builder.newLineIfNotEmpty();
      _builder.append("@Entity");
      _builder.newLine();
      _builder.append("@IdClass(");
      String _name_2 = aggregate.getName();
      _builder.append(_name_2, "");
      _builder.append("EventId.class)");
      _builder.newLineIfNotEmpty();
      _builder.append("public class ");
      _builder.append(className, "");
      _builder.append(" extends StreamEvent {");
      _builder.newLineIfNotEmpty();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Id");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@NotNull");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Column(name = \"");
      AggregateId _idType = aggregate.getIdType();
      String _name_3 = _idType.getName();
      String _sqlUpper_1 = StringExtensions.toSqlUpper(_name_3);
      _builder.append(_sqlUpper_1, "    ");
      _builder.append("\")");
      _builder.newLineIfNotEmpty();
      _builder.append("    ");
      _builder.append("private String ");
      AggregateId _idType_1 = aggregate.getIdType();
      String _name_4 = _idType_1.getName();
      String _firstLower = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_4);
      _builder.append(_firstLower, "    ");
      _builder.append(";");
      _builder.newLineIfNotEmpty();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Id");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@NotNull");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Column(name = \"EVENT_NUMBER\")");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("private Integer eventNumber;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("private transient ");
      AggregateId _idType_2 = aggregate.getIdType();
      String _name_5 = _idType_2.getName();
      _builder.append(_name_5, "    ");
      _builder.append(" id;");
      _builder.newLineIfNotEmpty();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("/**");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* Protected default constructor only required for JPA.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("protected ");
      String _name_6 = aggregate.getName();
      _builder.append(_name_6, "    ");
      _builder.append("Event() {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("super();");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("/**");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* Constructor with all mandatory data.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* ");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @param ");
      AggregateId _idType_3 = aggregate.getIdType();
      String _name_7 = _idType_3.getName();
      String _firstLower_1 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_7);
      _builder.append(_firstLower_1, "     ");
      _builder.newLineIfNotEmpty();
      _builder.append("     ");
      _builder.append("*            Unique aggregate identifier.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @param version");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*            Version.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @param eventEntry");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*            Event entry to connect.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public ");
      String _name_8 = aggregate.getName();
      _builder.append(_name_8, "    ");
      _builder.append("Event(@NotNull final ");
      AggregateId _idType_4 = aggregate.getIdType();
      String _name_9 = _idType_4.getName();
      _builder.append(_name_9, "    ");
      _builder.append(" ");
      AggregateId _idType_5 = aggregate.getIdType();
      String _name_10 = _idType_5.getName();
      String _firstLower_2 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_10);
      _builder.append(_firstLower_2, "    ");
      _builder.append(",");
      _builder.newLineIfNotEmpty();
      _builder.append("     ");
      _builder.append("@NotNull final Integer version, final EventEntry eventEntry) {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("super(eventEntry);");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("Contract.requireArgNotNull(\"");
      AggregateId _idType_6 = aggregate.getIdType();
      String _name_11 = _idType_6.getName();
      String _firstLower_3 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_11);
      _builder.append(_firstLower_3, "\t\t");
      _builder.append("\", ");
      AggregateId _idType_7 = aggregate.getIdType();
      String _name_12 = _idType_7.getName();
      String _firstLower_4 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_12);
      _builder.append(_firstLower_4, "\t\t");
      _builder.append(");");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("Contract.requireArgNotNull(\"version\", version);");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("this.");
      AggregateId _idType_8 = aggregate.getIdType();
      String _name_13 = _idType_8.getName();
      String _firstLower_5 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_13);
      _builder.append(_firstLower_5, "\t\t");
      _builder.append(" = ");
      AggregateId _idType_9 = aggregate.getIdType();
      String _name_14 = _idType_9.getName();
      String _firstLower_6 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_14);
      _builder.append(_firstLower_6, "\t\t");
      _builder.append(".asString();");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("this.eventNumber = version;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("this.id = ");
      AggregateId _idType_10 = aggregate.getIdType();
      String _name_15 = _idType_10.getName();
      String _firstLower_7 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_15);
      _builder.append(_firstLower_7, "\t\t");
      _builder.append(";");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("/**");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* Returns the unique aggregate identifier.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* ");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @return Aggregate identifier.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final String get");
      AggregateId _idType_11 = aggregate.getIdType();
      String _name_16 = _idType_11.getName();
      _builder.append(_name_16, "    ");
      _builder.append("() {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("return ");
      AggregateId _idType_12 = aggregate.getIdType();
      String _name_17 = _idType_12.getName();
      String _firstLower_8 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_17);
      _builder.append(_firstLower_8, "\t\t");
      _builder.append(";");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("/**");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* Returns the aggregate identifier.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* ");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @return Name converted into a ");
      String _name_18 = aggregate.getName();
      String _firstLower_9 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_18);
      _builder.append(_firstLower_9, "     ");
      _builder.append(" ID.");
      _builder.newLineIfNotEmpty();
      _builder.append("     ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final ");
      AggregateId _idType_13 = aggregate.getIdType();
      String _name_19 = _idType_13.getName();
      _builder.append(_name_19, "    ");
      _builder.append(" getId() {");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("if (id == null) {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("id = ");
      AggregateId _idType_14 = aggregate.getIdType();
      String _name_20 = _idType_14.getName();
      _builder.append(_name_20, "  ");
      _builder.append(".valueOf(");
      AggregateId _idType_15 = aggregate.getIdType();
      String _name_21 = _idType_15.getName();
      String _firstLower_10 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_21);
      _builder.append(_firstLower_10, "  ");
      _builder.append(");");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("}");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return id;");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("/**");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* Returns the event number of the stream.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* ");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("* @return Number that is unique in combination with the name.");
      _builder.newLine();
      _builder.append("     ");
      _builder.append("*/");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final Integer getEventNumber() {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return eventNumber;");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("// CHECKSTYLE:OFF Generated code");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Override");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final int hashCode() {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("final int prime = 31;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("int result = 1;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("result = prime * result\t+ ((");
      AggregateId _idType_16 = aggregate.getIdType();
      String _name_22 = _idType_16.getName();
      String _firstLower_11 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_22);
      _builder.append(_firstLower_11, "\t\t");
      _builder.append(" == null) ? 0 : ");
      AggregateId _idType_17 = aggregate.getIdType();
      String _name_23 = _idType_17.getName();
      String _firstLower_12 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_23);
      _builder.append(_firstLower_12, "\t\t");
      _builder.append(".hashCode());");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("result = prime * result\t+ ((eventNumber == null) ? 0 : eventNumber.hashCode());");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return result;");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Override");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final boolean equals(final Object obj) {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("if (this == obj)");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("return true;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("if (obj == null)");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("if (getClass() != obj.getClass())");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      String _name_24 = aggregate.getName();
      _builder.append(_name_24, "\t\t");
      _builder.append("Event other = (");
      String _name_25 = aggregate.getName();
      _builder.append(_name_25, "\t\t");
      _builder.append("Event) obj;");
      _builder.newLineIfNotEmpty();
      _builder.append("\t\t");
      _builder.append("if (");
      AggregateId _idType_18 = aggregate.getIdType();
      String _name_26 = _idType_18.getName();
      String _firstLower_13 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_26);
      _builder.append(_firstLower_13, "\t\t");
      _builder.append(" == null) {");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("if (other.");
      AggregateId _idType_19 = aggregate.getIdType();
      String _name_27 = _idType_19.getName();
      String _firstLower_14 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_27);
      _builder.append(_firstLower_14, "  ");
      _builder.append(" != null)");
      _builder.newLineIfNotEmpty();
      _builder.append("\t");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("} else if (!");
      AggregateId _idType_20 = aggregate.getIdType();
      String _name_28 = _idType_20.getName();
      String _firstLower_15 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_28);
      _builder.append(_firstLower_15, "\t\t");
      _builder.append(".equals(other.");
      AggregateId _idType_21 = aggregate.getIdType();
      String _name_29 = _idType_21.getName();
      String _firstLower_16 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_29);
      _builder.append(_firstLower_16, "\t\t");
      _builder.append("))");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("if (eventNumber == null) {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("if (other.eventNumber != null)");
      _builder.newLine();
      _builder.append("\t");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("} else if (!eventNumber.equals(other.eventNumber))");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("return false;");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return true;");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("// CHECKSTYLE:ON");
      _builder.newLine();
      _builder.newLine();
      _builder.append("    ");
      _builder.append("@Override");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("public final String toString() {");
      _builder.newLine();
      _builder.append("\t\t");
      _builder.append("return ");
      AggregateId _idType_22 = aggregate.getIdType();
      String _name_30 = _idType_22.getName();
      String _firstLower_17 = org.eclipse.xtext.xbase.lib.StringExtensions.toFirstLower(_name_30);
      _builder.append(_firstLower_17, "\t\t");
      _builder.append(" + \"-\" + eventNumber;");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("}");
      _builder.newLine();
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String src = _builder.toString();
      String _copyrightHeader = this.getCopyrightHeader();
      Set<String> _imports = ctx.getImports();
      SrcAll _srcAll = new SrcAll(_copyrightHeader, pkg, _imports, src);
      _xblockexpression = _srcAll.toString();
    }
    return _xblockexpression;
  }
}
