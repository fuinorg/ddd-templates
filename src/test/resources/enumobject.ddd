context x {

	namespace types {
		type String
		type Integer
		type Boolean
	}
	
	namespace enumobject {
		
		import x.types.*
	
		/** Enumeration type A - No variables. */
		enum EnumA {
			
			instances {
				
				/** First. */
				A
				 
				/** Second. */
				B
				
				/** Third. */
				C
				
			}
			
		}

		/** Enumeration type B - With variables. */
		enum EnumB {
			
			/** Identifier. */
			Integer id
			
			/** Short name. */
			String shortName

			/** Long name. */
			String longName
			
			instances {
				
				/** First. */
				A(1, "a", "First")
				 
				/** Second. */
				B(2, "b", "Second")
				
				/** Third. */
				C(3, "c", "Third")
				
			}
			
		}

		/** Enumeration type C - With deprecated instance. */
		enum EnumC {
			
			instances {
				
				/** First. */
				A
				 
				/** Second - Only kept for backward compatibility. */
				deprecated B
				
				/** Third. */
				C
				
			}
			
		}
		
		/** Enumeration type D - With integer base type. */
		enum EnumD base Integer {
			
			/** Identifier. */
			Integer id
			
			instances {
				
				/** First. */
				A(1)
				 
				/** Second. */
				B(2)
				
				/** Third. */
				C(3)
				
			}
			
		}

	}

}
